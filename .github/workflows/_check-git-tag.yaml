name: check git tag
on:
  workflow_call:
    inputs:
      version-history-file:
        description: バージョン情報が記載されたファイルへのパス
        type: string
        required: true
      git-tag-suffix:
        description: git tagに付けるサフィックス
        type: string
        default: off
        required: false
      github-sha:
        description: GitHub SHA
        type: string
        required: true
      github-pull-request-html-url:
        description: GitHub Pull Request HTML URL
        type: string
        required: true
    secrets:
      github-token:
        description: GitHubトークン
        required: true
    outputs:
      git-tag-version:
        description: "git tag version"
        value: ${{ jobs.check_git_tag.outputs.git-tag-version }}  

permissions:
  contents: read
  pull-requests: write

jobs:
  check_git_tag:
    runs-on: ubuntu-latest
    outputs:
      git-tag-version: ${{ steps.version.outputs.tag }}
    steps:
      - name: clone repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: extract version
        id: version
        run: |
          LOG_FILE=git_log

          echo -e "## タグ情報" | tee -a ${LOG_FILE}

          newtag=$(grep -E "v[0-9]{1,}.[0-9]{1,}.[0-9]{1,}" ${{ inputs.version-history-file }} | sed -r 's/^.*(v[0-9]{1,}.[0-9]{1,}.[0-9]{1,}).*$/\1/' | sort -r | head -1)
          
          if [ "${{ inputs.git-tag-suffix }}" != "off" ]; then
            newtag="${newtag}-${{ inputs.git-tag-suffix }}"
          fi
          
          echo -e "NEW_TAG= **${newtag}** " | tee -a ${LOG_FILE}

          pretag=$(git tag | sort -r | head -1)
          
          if [ "${{ inputs.git-tag-suffix }}" != "off" ]; then
            pretag=$(git tag | sort -r | grep "${{ inputs.git-tag-suffix }}" | head -1)
          fi

          if [ -z ${pretag} ]; then
            echo -e "No PRE_TAG." | tee -a ${LOG_FILE}
          else
            echo -e "PRE_TAG= **${pretag}** " | tee -a ${LOG_FILE}
          
            echo -e "\n\n" | tee -a ${LOG_FILE}
          
            echo -e "## [CHANGE DIFF] (↓バージョン履歴ファイルの変更内容)" | tee -a ${LOG_FILE}
            echo -e "\`\`\`" | tee -a ${LOG_FILE}
            git diff $pretag..${{ inputs.github-sha }} -- ${{ inputs.version-history-file }} | grep -E '^\+' | grep -v '+++' | sed -e 's/^\+//g' | tee -a ${LOG_FILE}
            echo -e "\`\`\`" | tee -a ${LOG_FILE}

            echo -e "\n\n" | tee -a ${LOG_FILE}
          
            echo -e "## [COMMIT LOG] (↓前回タグからの差分コミット内容)" | tee -a ${LOG_FILE}
            git log $pretag..${{ inputs.github-sha }} --oneline | tee -a ${LOG_FILE}
          fi
          
          echo ::set-output name=tag::$newtag

      - name:  Check Git diff and log PR Comments
        id: check-git-diff-and-log-comments
        run: |
          MESSAGE_FILE=pull_request_comment_message
          cat git_log | tee -a ${MESSAGE_FILE}
          gh pr comment -F ./${MESSAGE_FILE} "${URL}"
        env:
          GITHUB_TOKEN: ${{ secrets.github-token }}
          URL: ${{ inputs.github-pull-request-html-url }}
