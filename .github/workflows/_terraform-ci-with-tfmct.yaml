name: terraform ci with tfcmt
on:
  workflow_call:
    inputs:
      aws-region:
        description: AWSのリージョン名
        type: string
        default: ap-northeast-1
        required: false
      terraform-root-dir:
        description: Terraformコードが格納されているルートディレクトリ
        type: string
        required: true
      terraform-init-dir:
        description: terraform init を実行するディレクトリ
        type: string
        required: true
      terraform-init-option:
        description: terraform init のオプションを指定
        type: string
        default: off
        required: false
      terraform-workspace-name:
        description: terraform workspace名
        type: string
        default: default
        required: false
      terraform-plan-option:
        description: terraform plan のオプションを指定
        type: string
        default: off
        required: false
      terraform-version:
        description: terraformの実行バージョン
        type: string
        default: 1.1.9
        required: false
      tflint-version:
        description: tflintの実行バージョン
        type: string
        default: 0.36.3
        required: false
      tfcmt-version:
        description: tfcmtの実行バージョン
        type: string
        default: 3.2.2
        required: false
      reviewdog-version:
        description: reviewdogの実行バージョン
        type: string
        default: 0.14.1
        required: false
      git-checkout-ref:
        description: リポジトリをチェックアウトするときのブランチ、タグもしくはSHA
        type: string
        default: ""
        required: false
      github-pull-request-html-url:
        description:  GitHub Pull Request HTML URL
        type: string
        required: true
    secrets:
      aws-assume-role-arn:
        description: role to assume
        required: false
      gcp-workload-identity-provider:
        description: gcp workload identity provider
        required: false
      gcp-service-account:
        description: gcp service account
        required: false
      github-token:
        description: GitHubトークン
        required: true

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  terraform-ci:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: .

    # secretsの値は直接if条件に指摘できないため、環境変数にいったん入れる。
    # https://docs.github.com/ja/actions/using-workflows/workflow-syntax-for-github-actions#example-using-secrets
    env:
      aws_assume_role_arn: ${{ secrets.aws-assume-role-arn }}
      gcp_workload_identity_provider: ${{ secrets.gcp-workload-identity-provider }}

    steps:
      - name: clone repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - if: ${{ inputs.git-checkout-ref != '' }} # <= ref が指定されていたら git checkout する
        name: git checkout
        id: checkout
        run: git checkout ${{ inputs.git-checkout-ref }}

      - name: setup terraform
        id: setup-terraform
        run: |
          : # デフォルトでインストールされているterraformを削除
          rm -f $(which terraform)
          
          : # setup terraform
          curl -sL https://releases.hashicorp.com/terraform/${{ inputs.terraform-version }}/terraform_${{ inputs.terraform-version }}_linux_amd64.zip > /tmp/terraform.zip
          unzip /tmp/terraform.zip -d /usr/local/bin/
          chmod +x /usr/local/bin/terraform
          which terraform
          terraform -v

      - name: setup reviewdog
        uses: reviewdog/action-setup@v1
        with:
          reviewdog_version: v${{ inputs.reviewdog-version }}

      - name: setup tflint
        uses: terraform-linters/setup-tflint@v1
        with:
          tflint_version: v${{ inputs.tflint-version }}

      - name: setup tfcmt
        run: |
          wget https://github.com/suzuki-shunsuke/tfcmt/releases/download/v${{ inputs.tfcmt-version }}/tfcmt_linux_amd64.tar.gz
          tar -zxvf tfcmt_linux_amd64.tar.gz
          chmod +x ./tfcmt
          sudo mv ./tfcmt /usr/local/bin/tfcmt
          tfcmt -v

      - if: ${{ env.aws_assume_role_arn != '' }} # secretsにAWSのAssumeRoleが設定されていたら実行
        name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: ${{ secrets.aws-assume-role-arn }}
          aws-region: ${{ inputs.aws-region }}

      # ref. https://github.com/google-github-actions/auth
      - if: ${{ env.gcp_workload_identity_provider != '' }} # secretsにGCPのWorkloadIdentityProviderが設定されていたら実行
        name: authenticate to gcp
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets.gcp-workload-identity-provider }}
          service_account: ${{ secrets.gcp-service-account }}

      - name: terraform fmt
        id: fmt
        run: terraform fmt -recursive -diff=true -check=true 2>&1 | tee -a terraform_fmt_result
        continue-on-error: true

      - name: Terraform fmt PR Comments
        id: tf-fmt-pr-comments
        run: |
          MESSAGE_FILE=pull_request_comment_message

          echo -e "[Terraform fmt]\n\n" | tee ${MESSAGE_FILE}

          cat terraform_fmt_result | tee -a ${MESSAGE_FILE}

          echo -e "\n\nTerraform fmt Finished." | tee -a ${MESSAGE_FILE}

          : # Terraform fmtのテスト結果がカラー表示されるため、そのままプルリクエストにコメントすると文字化けのようになる。
          : # sedでカラーを取り除く。
          sed -i -r "s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[mGK]//g" ${MESSAGE_FILE}
          
          gh pr comment -F ./${MESSAGE_FILE} "${URL}"
        env:
          GITHUB_TOKEN: ${{ secrets.github-token }}
          URL: ${{ inputs.github-pull-request-html-url }}

      - name: terraform init
        id: init
        working-directory: ${{ inputs.terraform-init-dir }}
        run: |
          if [ "${{ inputs.terraform-init-option }}" = "off" ]; then
            terraform init
          else
            terraform init ${{ inputs.terraform-init-option }}
          fi

      - name: terraform workspace
        id: workspace
        working-directory: ${{ inputs.terraform-root-dir }}
        run: terraform workspace select ${{ inputs.terraform-workspace-name }} || terraform workspace new ${{ inputs.terraform-workspace-name }}

      - name: terraform validate
        id: validate
        run: |
          TERRAFORM_DIR=${{ inputs.terraform-root-dir }}
          TERRAFORM_VALIDATE_RESULT_FILE=terraform_validate_result

          : #pwdを参照する度に毎回結果が変わるので、別途スクリプト実行開始時点のディレクトリ位置を記録しておく。
          pwd=$(pwd)
          PWD=${pwd} 

          find ${TERRAFORM_DIR} -type d | grep -v "${TERRAFORM_DIR}/.terraform" | grep -v "module" | while read -r terraform_dirs
          do
            cd "${pwd}/${terraform_dirs}"
            echo "Checked Directory: ${pwd}/${terraform_dirs}"
            
            validate_result=$(terraform validate -no-color)
            echo -e "${validate_result}"
            
            cd ${PWD}
          done | tee -a ${TERRAFORM_VALIDATE_RESULT_FILE}
        continue-on-error: true

      - name: Terraform validate PR Comments
        id: tf-validate-pr-comments
        run: |
          MESSAGE_FILE=pull_request_comment_message

          echo -e "[Terraform Validate]\n\n" | tee ${MESSAGE_FILE}

          cat terraform_validate_result | tee -a ${MESSAGE_FILE}

          echo -e "\n\nTerraform validate Finished." | tee -a ${MESSAGE_FILE}
          
          gh pr comment -F ./${MESSAGE_FILE} "${URL}"
        env:
          GITHUB_TOKEN: ${{ secrets.github-token }}
          URL: ${{ inputs.github-pull-request-html-url }}

      - name: terraform lint with reviewdog
        id: tflint
        working-directory: ${{ inputs.terraform-init-dir }}
        run: |
          tflint --format=checkstyle --module . \
          | reviewdog -f=checkstyle -name="tflint" -reporter="github-pr-review" -level="error" -fail-on-error="false" -filter-mode="nofilter"
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.github-token }}

      - name: terraform plan with tfcmt
        id: plan
        working-directory: ${{ inputs.terraform-init-dir }}
        run: |
          if [ "${{ inputs.terraform-plan-option }}" = "off" ]; then
            tfcmt plan -- terraform plan
          else
            tfcmt plan -- terraform plan ${{ inputs.terraform-plan-option }}
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.github-token }}
